
package webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OperacoesMatematicas", targetNamespace = "http://webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OperacoesMatematicas {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplicar", targetNamespace = "http://webservices/", className = "webservices.Multiplicar")
    @ResponseWrapper(localName = "multiplicarResponse", targetNamespace = "http://webservices/", className = "webservices.MultiplicarResponse")
    @Action(input = "http://webservices/OperacoesMatematicas/multiplicarRequest", output = "http://webservices/OperacoesMatematicas/multiplicarResponse")
    public double multiplicar(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "somar", targetNamespace = "http://webservices/", className = "webservices.Somar")
    @ResponseWrapper(localName = "somarResponse", targetNamespace = "http://webservices/", className = "webservices.SomarResponse")
    @Action(input = "http://webservices/OperacoesMatematicas/somarRequest", output = "http://webservices/OperacoesMatematicas/somarResponse")
    public double somar(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subtrair", targetNamespace = "http://webservices/", className = "webservices.Subtrair")
    @ResponseWrapper(localName = "subtrairResponse", targetNamespace = "http://webservices/", className = "webservices.SubtrairResponse")
    @Action(input = "http://webservices/OperacoesMatematicas/subtrairRequest", output = "http://webservices/OperacoesMatematicas/subtrairResponse")
    public double subtrair(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dividir", targetNamespace = "http://webservices/", className = "webservices.Dividir")
    @ResponseWrapper(localName = "dividirResponse", targetNamespace = "http://webservices/", className = "webservices.DividirResponse")
    @Action(input = "http://webservices/OperacoesMatematicas/dividirRequest", output = "http://webservices/OperacoesMatematicas/dividirResponse")
    public double dividir(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
